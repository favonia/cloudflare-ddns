name: Docker

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

env:
  platforms: "linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64,linux/ppc64le,linux/riscv64,linux/s390x"

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-build-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
    steps:
      - name: üõ°Ô∏è Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            docker.io:443
            github.com:443
            index.docker.io:443
            production.cloudflare.docker.com:443
            proxy.golang.org:443
            registry-1.docker.io:443
            storage.googleapis.com:443

      - name: üöö Check out the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          persist-credentials: false
      - name: ü§ñ Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0
      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@5e716dcfd653738c2d1db099bfba194a84158be4 # v2.3.0
      - name: üîë Log in to Docker
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: üè∑Ô∏è Fetch git tags for `git describe`
        run: "git fetch --force --prune --unshallow --tags"
      - name: üìù Run `git describe` and save its output
        run: echo 'GIT_DESCRIBE='`git describe --tags --always --long` >> $GITHUB_OUTPUT
        id: git-describe
      - name: üìù Calculate metadata for minimal Docker images
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4.3.0
        id: meta
        with:
          images: ${{ github.repository }}
          tags: |
            type=edge
            type=semver,pattern={{version}}
          labels: |
            io.artifacthub.package.license=Apache-2.0
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/favonia/cloudflare-ddns/main/build/SUMMARY.markdown
            io.artifacthub.package.maintainers=[{"name":"favonia","email":"favonia@email.com"}]
      - name: üöÄ Build and deploy minimal Docker images
        uses: docker/build-push-action@37abcedcc1da61a57767b7588cb9d03eb57e28b3 # v3.3.0
        id: build
        with:
          target: "minimal"
          push: ${{ github.event_name != 'pull_request' }}
          build-args: ${{ format('GIT_DESCRIBE={0}', steps.git-describe.outputs.GIT_DESCRIBE) }}
          platforms: ${{ env.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: ‚úçÔ∏è Install Cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # 2.8.1
      - name: ‚úçÔ∏è Sign the Docker images
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY --recursive "favonia/cloudflare-ddns@${{ steps.build.outputs.digest }}"
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
