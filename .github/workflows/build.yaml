name: Docker

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

env:
  platforms: "linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64,linux/ppc64le,linux/riscv64,linux/s390x"

permissions:
  contents: read

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-build-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: read
    steps:
      - name: üõ°Ô∏è Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
          disable-sudo: true
          policy: build

      - name: üöö Check out the repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          persist-credentials: false
      - name: ü§ñ Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
        with:
          version: latest
      - name: üîë Log in to Docker
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: üè∑Ô∏è Fetch git tags for `git describe`
        run: "git fetch --force --prune --unshallow --tags"
      - name: üìù Run `git describe` and save its output
        run: echo 'GIT_DESCRIBE='`git describe --tags --always --long` >> $GITHUB_OUTPUT
        id: git-describe
      - name: üìù Calculate metadata for minimal Docker images
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        id: meta
        with:
          images: ${{ github.repository }}
          tags: |
            type=edge
            type=semver,pattern={{major}}
            type=semver,pattern={{version}}
          annotations: |
            io.artifacthub.package.license=Apache-2.0 WITH LLVM-exception
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/favonia/cloudflare-ddns/main/build/SUMMARY.markdown
            io.artifacthub.package.maintainers=[{"name":"favonia","email":"favonia@email.com"}]
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index
      - name: üöÄ Build and deploy minimal Docker images
        uses: docker/build-push-action@32945a339266b759abcbdc89316275140b0fc960 # v6.8.0
        id: build
        with:
          target: "minimal"
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            ${{ format('GIT_DESCRIBE={0}', steps.git-describe.outputs.GIT_DESCRIBE) }}
          platforms: ${{ env.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: "mode=max"
      - name: ‚úçÔ∏è Install Cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0
      - name: ‚úçÔ∏è Sign the Docker images
        if: ${{ github.event_name == 'release' }}
        run: |
          cosign sign --recursive --yes "favonia/cloudflare-ddns@${{ steps.build.outputs.digest }}"
